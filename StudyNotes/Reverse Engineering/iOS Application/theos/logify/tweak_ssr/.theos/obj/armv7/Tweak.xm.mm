#line 1 "Tweak.xm"

#include <substrate.h>
#if defined(__clang__)
#if __has_feature(objc_arc)
#define _LOGOS_SELF_TYPE_NORMAL __unsafe_unretained
#define _LOGOS_SELF_TYPE_INIT __attribute__((ns_consumed))
#define _LOGOS_SELF_CONST const
#define _LOGOS_RETURN_RETAINED __attribute__((ns_returns_retained))
#else
#define _LOGOS_SELF_TYPE_NORMAL
#define _LOGOS_SELF_TYPE_INIT
#define _LOGOS_SELF_CONST
#define _LOGOS_RETURN_RETAINED
#endif
#else
#define _LOGOS_SELF_TYPE_NORMAL
#define _LOGOS_SELF_TYPE_INIT
#define _LOGOS_SELF_CONST
#define _LOGOS_RETURN_RETAINED
#endif

@class AppDelegate; 
static void (*_logos_orig$_ungrouped$AppDelegate$setWindow$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, UIWindow *); static void _logos_method$_ungrouped$AppDelegate$setWindow$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, UIWindow *); static UIWindow * (*_logos_orig$_ungrouped$AppDelegate$window)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static UIWindow * _logos_method$_ungrouped$AppDelegate$window(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$AppDelegate$languageDidChangeNotification$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$languageDidChangeNotification$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$cleanDocumentInboxDelay$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, double); static void _logos_method$_ungrouped$AppDelegate$cleanDocumentInboxDelay$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, double); static void (*_logos_orig$_ungrouped$AppDelegate$setupNotifications)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$AppDelegate$setupNotifications(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$AppDelegate$setupMigrations)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$AppDelegate$setupMigrations(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$AppDelegate$setupBackgroundTasks)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$AppDelegate$setupBackgroundTasks(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$AppDelegate$setupAppLanguage)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$AppDelegate$setupAppLanguage(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$AppDelegate$syncServerObject$userInfo$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$AppDelegate$syncServerObject$userInfo$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$AppDelegate$serversWillSyncNotification$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$serversWillSyncNotification$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$serversWillArchiveNotification$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$serversWillArchiveNotification$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$syncConfigObject$userInfo$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$AppDelegate$syncConfigObject$userInfo$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$AppDelegate$configWillSyncNotification$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$configWillSyncNotification$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$handleOverwriteConfigFileWithURL$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$handleOverwriteConfigFileWithURL$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$saveConfigFileWithURL$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$saveConfigFileWithURL$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static _Bool (*_logos_orig$_ungrouped$AppDelegate$application$openURL$options$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id, id); static _Bool _logos_method$_ungrouped$AppDelegate$application$openURL$options$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id, id); static void (*_logos_orig$_ungrouped$AppDelegate$application$performActionForShortcutItem$completionHandler$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id, CDUnknownBlockType); static void _logos_method$_ungrouped$AppDelegate$application$performActionForShortcutItem$completionHandler$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id, CDUnknownBlockType); static void (*_logos_orig$_ungrouped$AppDelegate$suspendApplication)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$AppDelegate$suspendApplication(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$AppDelegate$applicationWillTerminate$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$applicationWillTerminate$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$applicationDidBecomeActive$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$applicationDidBecomeActive$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$applicationWillEnterForeground$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$applicationWillEnterForeground$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$applicationDidEnterBackground$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$applicationDidEnterBackground$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$AppDelegate$applicationWillResignActive$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$AppDelegate$applicationWillResignActive$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id); static _Bool (*_logos_orig$_ungrouped$AppDelegate$application$didFinishLaunchingWithOptions$)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id); static _Bool _logos_method$_ungrouped$AppDelegate$application$didFinishLaunchingWithOptions$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL, id, id); static NSString * (*_logos_orig$_ungrouped$AppDelegate$debugDescription)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static NSString * _logos_method$_ungrouped$AppDelegate$debugDescription(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static NSString * (*_logos_orig$_ungrouped$AppDelegate$description)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static NSString * _logos_method$_ungrouped$AppDelegate$description(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static unsigned long long (*_logos_orig$_ungrouped$AppDelegate$hash)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static unsigned long long _logos_method$_ungrouped$AppDelegate$hash(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static Class (*_logos_orig$_ungrouped$AppDelegate$superclass)(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); static Class _logos_method$_ungrouped$AppDelegate$superclass(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST, SEL); 

#line 1 "Tweak.xm"

static void _logos_method$_ungrouped$AppDelegate$setWindow$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, UIWindow * window) { HBLogDebug(@"-[<AppDelegate: %p> setWindow:%@]", self, window); _logos_orig$_ungrouped$AppDelegate$setWindow$(self, _cmd, window); }
static UIWindow * _logos_method$_ungrouped$AppDelegate$window(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> window]", self); UIWindow * r = _logos_orig$_ungrouped$AppDelegate$window(self, _cmd); HBLogDebug(@" = %@", r); return r; }
- (void).cxx_destruct { HBLogDebug(@"-[<AppDelegate: %p> window]", self); _logos_orig$_ungrouped$AppDelegate$window(self, _cmd); }
static void _logos_method$_ungrouped$AppDelegate$languageDidChangeNotification$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> languageDidChangeNotification:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$languageDidChangeNotification$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$cleanDocumentInboxDelay$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, double arg1) { HBLogDebug(@"-[<AppDelegate: %p> cleanDocumentInboxDelay:%f]", self, arg1); _logos_orig$_ungrouped$AppDelegate$cleanDocumentInboxDelay$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$setupNotifications(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> setupNotifications]", self); _logos_orig$_ungrouped$AppDelegate$setupNotifications(self, _cmd); }
static void _logos_method$_ungrouped$AppDelegate$setupMigrations(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> setupMigrations]", self); _logos_orig$_ungrouped$AppDelegate$setupMigrations(self, _cmd); }
static void _logos_method$_ungrouped$AppDelegate$setupBackgroundTasks(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> setupBackgroundTasks]", self); _logos_orig$_ungrouped$AppDelegate$setupBackgroundTasks(self, _cmd); }
static void _logos_method$_ungrouped$AppDelegate$setupAppLanguage(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> setupAppLanguage]", self); _logos_orig$_ungrouped$AppDelegate$setupAppLanguage(self, _cmd); }
static void _logos_method$_ungrouped$AppDelegate$syncServerObject$userInfo$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<AppDelegate: %p> syncServerObject:%@ userInfo:%@]", self, arg1, arg2); _logos_orig$_ungrouped$AppDelegate$syncServerObject$userInfo$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$AppDelegate$serversWillSyncNotification$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> serversWillSyncNotification:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$serversWillSyncNotification$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$serversWillArchiveNotification$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> serversWillArchiveNotification:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$serversWillArchiveNotification$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$syncConfigObject$userInfo$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<AppDelegate: %p> syncConfigObject:%@ userInfo:%@]", self, arg1, arg2); _logos_orig$_ungrouped$AppDelegate$syncConfigObject$userInfo$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$AppDelegate$configWillSyncNotification$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> configWillSyncNotification:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$configWillSyncNotification$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$handleOverwriteConfigFileWithURL$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> handleOverwriteConfigFileWithURL:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$handleOverwriteConfigFileWithURL$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$saveConfigFileWithURL$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> saveConfigFileWithURL:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$saveConfigFileWithURL$(self, _cmd, arg1); }
static _Bool _logos_method$_ungrouped$AppDelegate$application$openURL$options$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, id arg3) { HBLogDebug(@"-[<AppDelegate: %p> application:%@ openURL:%@ options:%@]", self, arg1, arg2, arg3); _Bool r = _logos_orig$_ungrouped$AppDelegate$application$openURL$options$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$AppDelegate$application$performActionForShortcutItem$completionHandler$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2, CDUnknownBlockType arg3) { HBLogDebug(@"-[<AppDelegate: %p> application:%@ performActionForShortcutItem:%@ completionHandler:0x%x]", self, arg1, arg2, (unsigned int)arg3); _logos_orig$_ungrouped$AppDelegate$application$performActionForShortcutItem$completionHandler$(self, _cmd, arg1, arg2, arg3); }
static void _logos_method$_ungrouped$AppDelegate$suspendApplication(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> suspendApplication]", self); _logos_orig$_ungrouped$AppDelegate$suspendApplication(self, _cmd); }
static void _logos_method$_ungrouped$AppDelegate$applicationWillTerminate$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> applicationWillTerminate:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$applicationWillTerminate$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$applicationDidBecomeActive$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> applicationDidBecomeActive:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$applicationDidBecomeActive$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$applicationWillEnterForeground$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> applicationWillEnterForeground:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$applicationWillEnterForeground$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$applicationDidEnterBackground$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> applicationDidEnterBackground:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$applicationDidEnterBackground$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$AppDelegate$applicationWillResignActive$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<AppDelegate: %p> applicationWillResignActive:%@]", self, arg1); _logos_orig$_ungrouped$AppDelegate$applicationWillResignActive$(self, _cmd, arg1); }
static _Bool _logos_method$_ungrouped$AppDelegate$application$didFinishLaunchingWithOptions$(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<AppDelegate: %p> application:%@ didFinishLaunchingWithOptions:%@]", self, arg1, arg2); _Bool r = _logos_orig$_ungrouped$AppDelegate$application$didFinishLaunchingWithOptions$(self, _cmd, arg1, arg2); HBLogDebug(@" = %d", r); return r; }
static NSString * _logos_method$_ungrouped$AppDelegate$debugDescription(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> debugDescription]", self); NSString * r = _logos_orig$_ungrouped$AppDelegate$debugDescription(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static NSString * _logos_method$_ungrouped$AppDelegate$description(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> description]", self); NSString * r = _logos_orig$_ungrouped$AppDelegate$description(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static unsigned long long _logos_method$_ungrouped$AppDelegate$hash(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> hash]", self); unsigned long long  r = _logos_orig$_ungrouped$AppDelegate$hash(self, _cmd); HBLogDebug(@" = %llu", r); return r; }
static Class _logos_method$_ungrouped$AppDelegate$superclass(_LOGOS_SELF_TYPE_NORMAL AppDelegate* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<AppDelegate: %p> superclass]", self); Class  r = _logos_orig$_ungrouped$AppDelegate$superclass(self, _cmd); HBLogDebug(@" = %@", r); return r; }

static __attribute__((constructor)) void _logosLocalInit() {
{Class _logos_class$_ungrouped$AppDelegate = objc_getClass("AppDelegate"); MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(setWindow:), (IMP)&_logos_method$_ungrouped$AppDelegate$setWindow$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$setWindow$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(window), (IMP)&_logos_method$_ungrouped$AppDelegate$window, (IMP*)&_logos_orig$_ungrouped$AppDelegate$window);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(languageDidChangeNotification:), (IMP)&_logos_method$_ungrouped$AppDelegate$languageDidChangeNotification$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$languageDidChangeNotification$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(cleanDocumentInboxDelay:), (IMP)&_logos_method$_ungrouped$AppDelegate$cleanDocumentInboxDelay$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$cleanDocumentInboxDelay$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(setupNotifications), (IMP)&_logos_method$_ungrouped$AppDelegate$setupNotifications, (IMP*)&_logos_orig$_ungrouped$AppDelegate$setupNotifications);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(setupMigrations), (IMP)&_logos_method$_ungrouped$AppDelegate$setupMigrations, (IMP*)&_logos_orig$_ungrouped$AppDelegate$setupMigrations);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(setupBackgroundTasks), (IMP)&_logos_method$_ungrouped$AppDelegate$setupBackgroundTasks, (IMP*)&_logos_orig$_ungrouped$AppDelegate$setupBackgroundTasks);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(setupAppLanguage), (IMP)&_logos_method$_ungrouped$AppDelegate$setupAppLanguage, (IMP*)&_logos_orig$_ungrouped$AppDelegate$setupAppLanguage);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(syncServerObject:userInfo:), (IMP)&_logos_method$_ungrouped$AppDelegate$syncServerObject$userInfo$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$syncServerObject$userInfo$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(serversWillSyncNotification:), (IMP)&_logos_method$_ungrouped$AppDelegate$serversWillSyncNotification$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$serversWillSyncNotification$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(serversWillArchiveNotification:), (IMP)&_logos_method$_ungrouped$AppDelegate$serversWillArchiveNotification$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$serversWillArchiveNotification$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(syncConfigObject:userInfo:), (IMP)&_logos_method$_ungrouped$AppDelegate$syncConfigObject$userInfo$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$syncConfigObject$userInfo$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(configWillSyncNotification:), (IMP)&_logos_method$_ungrouped$AppDelegate$configWillSyncNotification$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$configWillSyncNotification$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(handleOverwriteConfigFileWithURL:), (IMP)&_logos_method$_ungrouped$AppDelegate$handleOverwriteConfigFileWithURL$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$handleOverwriteConfigFileWithURL$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(saveConfigFileWithURL:), (IMP)&_logos_method$_ungrouped$AppDelegate$saveConfigFileWithURL$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$saveConfigFileWithURL$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(application:openURL:options:), (IMP)&_logos_method$_ungrouped$AppDelegate$application$openURL$options$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$application$openURL$options$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(application:performActionForShortcutItem:completionHandler:), (IMP)&_logos_method$_ungrouped$AppDelegate$application$performActionForShortcutItem$completionHandler$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$application$performActionForShortcutItem$completionHandler$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(suspendApplication), (IMP)&_logos_method$_ungrouped$AppDelegate$suspendApplication, (IMP*)&_logos_orig$_ungrouped$AppDelegate$suspendApplication);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(applicationWillTerminate:), (IMP)&_logos_method$_ungrouped$AppDelegate$applicationWillTerminate$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$applicationWillTerminate$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(applicationDidBecomeActive:), (IMP)&_logos_method$_ungrouped$AppDelegate$applicationDidBecomeActive$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$applicationDidBecomeActive$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(applicationWillEnterForeground:), (IMP)&_logos_method$_ungrouped$AppDelegate$applicationWillEnterForeground$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$applicationWillEnterForeground$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(applicationDidEnterBackground:), (IMP)&_logos_method$_ungrouped$AppDelegate$applicationDidEnterBackground$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$applicationDidEnterBackground$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(applicationWillResignActive:), (IMP)&_logos_method$_ungrouped$AppDelegate$applicationWillResignActive$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$applicationWillResignActive$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(application:didFinishLaunchingWithOptions:), (IMP)&_logos_method$_ungrouped$AppDelegate$application$didFinishLaunchingWithOptions$, (IMP*)&_logos_orig$_ungrouped$AppDelegate$application$didFinishLaunchingWithOptions$);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(debugDescription), (IMP)&_logos_method$_ungrouped$AppDelegate$debugDescription, (IMP*)&_logos_orig$_ungrouped$AppDelegate$debugDescription);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(description), (IMP)&_logos_method$_ungrouped$AppDelegate$description, (IMP*)&_logos_orig$_ungrouped$AppDelegate$description);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(hash), (IMP)&_logos_method$_ungrouped$AppDelegate$hash, (IMP*)&_logos_orig$_ungrouped$AppDelegate$hash);MSHookMessageEx(_logos_class$_ungrouped$AppDelegate, @selector(superclass), (IMP)&_logos_method$_ungrouped$AppDelegate$superclass, (IMP*)&_logos_orig$_ungrouped$AppDelegate$superclass);} }
#line 32 "Tweak.xm"
